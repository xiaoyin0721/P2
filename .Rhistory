u1 <- runif(10^5)
u2 <- runif(10^5)
theta <- u1 * 2 * pi
v <- -2*log(u2)
r <- sqrt(v)
x <- r*cos(theta)
y <- r*sin(theta)
shapiro.test(x[1:5000])
hist(x, breaks = 50)
hist(y, breaks = 50)
?hist
plot(x,y,pch=19, cex=0.4, asp=1, las=1)
knitr::opts_chunk$set(echo = TRUE)
library(mosaic)
library(ggplot2)
library(ggpubr)
generate_sampling_distribution <- function(){
set.seed(199)
n = 10^5
sample_means = rep(0, n)
for (i in 1:n){
sample_means[i] = mean(rgamma(30, shape=9, rate=2))
}
hist(sample_means, main="", xlab="Sampling distribution with a sample size of 30")
}
generate_sampling_distribution <- function(){
set.seed(199)
n = 10^5
sample_means = rep(0, n)
for (i in 1:n){
sample_means[i] = mean(rgamma(30, shape=9, rate=2))
}
hist(sample_means, main="", xlab="Sampling distribution with a sample size of 30")
}
generate_sampling_distribution()
simulate_population <- function(){
set.seed(199)
pop <- rgamma(10^5, shape=9, rate=2)
hist(pop, breaks = 500, main="Plot of a left-skewed population")
}
simulate_population()
generate_sampling_distribution <- function(){
set.seed(199)
n = 10^5
sample_means = rep(0, n)
for (i in 1:n){
sample_means[i] = mean(rgamma(10, shape=9, rate=2))
}
hist(sample_means, main="", xlab="Sampling distribution with a sample size of 30")
}
generate_sampling_distribution()
generate_sampling_distribution <- function(){
set.seed(199)
n = 10^5
sample_means = rep(0, n)
for (i in 1:n){
sample_means[i] = mean(rgamma(30, shape=9, rate=2))
}
hist(sample_means, main="", xlab="Sampling distribution with a sample size of 30")
}
generate_sampling_distribution()
generate_sampling_distribution <- function(){
set.seed(199)
n = 10^5
sample_means = rep(0, n)
for (i in 1:n){
sample_means[i] = mean(rgamma(5, shape=9, rate=2))
}
hist(sample_means, main="", xlab="Sampling distribution with a sample size of 30")
}
generate_sampling_distribution()
generate_sampling_distribution <- function(){
set.seed(199)
n = 10^5
sample_means = rep(0, n)
for (i in 1:n){
sample_means[i] = mean(rgamma(3, shape=9, rate=2))
}
hist(sample_means, main="", xlab="Sampling distribution with a sample size of 30")
}
generate_sampling_distribution()
generate_sampling_distribution <- function(){
set.seed(199)
n = 10^5
sample_means = rep(0, n)
for (i in 1:n){
sample_means[i] = mean(rgamma(2, shape=9, rate=2))
}
hist(sample_means, main="", xlab="Sampling distribution with a sample size of 30")
}
generate_sampling_distribution()
generate_sampling_distribution <- function(){
set.seed(199)
n = 10^5
sample_means = rep(0, n)
for (i in 1:n){
sample_means[i] = mean(rgamma(30, shape=9, rate=2))
}
hist(sample_means, main="", xlab="Sampling distribution with a sample size of 30")
}
generate_sampling_distribution()
generate_sampling_distribution <- function(sample_size){
set.seed(199)
n = 10^5
sample_means = rep(0, n)
for (i in 1:n){
sample_means[i] = mean(rgamma(sample_size, shape=9, rate=2))
}
hist(sample_means, main="Central Limit Theorem", xlab="Sampling distribution with a sample size of 30")
}
generate_sampling_distribution(30)
generate_sampling_distribution <- function(sample_size){
set.seed(199)
n = 10^5
sample_means = rep(0, n)
for (i in 1:n){
sample_means[i] = mean(rgamma(sample_size, shape=9, rate=2))
}
hist(sample_means, main="Central Limit Theorem", xlab="Sampling distribution with a sample size of 30")
}
generate_sampling_distribution(3)
generate_sampling_distribution(30)
generate_sampling_distribution <- function(sample_size){
set.seed(199)
n = 10^5
sample_means = rep(0, n)
for (i in 1:n){
sample_means[i] = mean(rgamma(sample_size, shape=9, rate=2))
}
hist(sample_means, main="Central Limit Theorem", xlab="Sampling distribution with a sample size of 30")
}
generate_sampling_distribution(30)
